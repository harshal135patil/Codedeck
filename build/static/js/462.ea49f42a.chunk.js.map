{"version":3,"file":"static/js/462.ea49f42a.chunk.js","mappings":"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","sources":["Component/ModalTypes/NewFolder.jsx","Component/ModalTypes/NewPlayGround.jsx","Component/ModalTypes/NewPlayGroundAndFolder.jsx","Component/ModalTypes/EditFolder.jsx","Component/ModalTypes/EditPlayGroundTitle.jsx","Component/ModalTypes/Loading.jsx","Component/Modal.jsx","Component/Home/LeftPaneScreen.jsx","Component/Card.jsx","Component/Home/RightPaneScreen.jsx","Pages/Home.jsx","Component/Playground/NavBar.jsx","Component/Playground/EditContainer.jsx","Component/Playground/InputConsole.jsx","Component/Playground/OutputConsole.jsx","Pages/Playground.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { ModalContext } from '../../Context/ModalContext'\r\nimport { PlayGroundContext } from '../../Context/PlayGroundContext'\r\n\r\nfunction NewFolder() {\r\n  const { closeModal } = useContext(ModalContext);\r\n  const { addFolder } = useContext(PlayGroundContext)\r\n  const [folderTitle, setFolderTitle] = useState(\"\")\r\n\r\n  console.log(\"NewFolder\")\r\n  return (\r\n    <>\r\n      <div className='flex flex-row justify-end p-4' >\r\n        <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n        <h2> Create a New Folder</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={folderTitle}\r\n          placeholder=\"Please enter folder title\"\r\n          onChange={(e) => setFolderTitle(e.target.value)}\r\n          className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n        />\r\n        <button\r\n        className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n          onClick={() => {\r\n            addFolder(folderTitle);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Create Folder\r\n        </button>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewFolder","import React, { useState, useContext } from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { ModalContext } from '../../Context/ModalContext'\r\nimport { PlayGroundContext } from '../../Context/PlayGroundContext'\r\nimport Select from 'react-select'\r\n\r\nfunction NewPlayGround() {\r\n\r\n  const { isOpenModal, closeModal } = useContext(ModalContext);\r\n  const { addPlayground } = useContext(PlayGroundContext);\r\n\r\n  const languageOptions = [\r\n    { value: 'javascript', label: 'javascript' },\r\n    { value: 'python', label: 'python' },\r\n    { value: 'java', label: 'java' },\r\n    { value: 'cpp', label: 'cpp' }\r\n  ];\r\n\r\n  const { folderId } = isOpenModal.identifiers;\r\n  const [cardTitle, setCardTitle] = useState(\"\");\r\n  const [language, setLanguage] = useState(languageOptions[0]);\r\n\r\n  const handleLanguageChange = (selectedOption) => {\r\n    setLanguage(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='flex flex-row justify-end p-4' >\r\n        <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n        <h2> Create a New Playground</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={cardTitle}\r\n          placeholder=\"Please enter Playground title\"\r\n          onChange={(e) => setCardTitle(e.target.value)}\r\n          className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n        />\r\n        <Select\r\n          options={languageOptions}\r\n          value={language}\r\n          onChange={handleLanguageChange}\r\n        />\r\n        <button\r\n          className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n          onClick={() => {\r\n            addPlayground(folderId,cardTitle,language.value);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Create Folder\r\n        </button>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPlayGround","import React, { useState, useContext } from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { ModalContext } from '../../Context/ModalContext'\r\nimport { PlayGroundContext } from '../../Context/PlayGroundContext'\r\nimport Select from 'react-select'\r\n\r\n\r\nfunction NewPlayGroundAndFolder() {\r\n  const { isOpenModal, closeModal } = useContext(ModalContext);\r\n  const { addPlaygroundAndFolder } = useContext(PlayGroundContext);\r\n\r\n  const languageOptions = [\r\n    { value: 'javascript', label: 'javascript' },\r\n    { value: 'python', label: 'python' },\r\n    { value: 'java', label: 'java' },\r\n    { value: 'cpp', label: 'cpp' }\r\n  ];\r\n\r\n  const [playgroundName, setPlaygroundName] = useState(\"\");\r\n  const [folderName, setFolderName] = useState(\"\");\r\n  const [language, setLanguage] = useState(languageOptions[0]);\r\n  const handleLanguageChange = (selectedOption) => {\r\n    setLanguage(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='flex flex-row justify-end p-4' >\r\n        <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n        <h2> Create a New Playground & New Folder</h2>\r\n        <div className='flex w-full'>\r\n\r\n          <label>Enter Folder Name</label>\r\n          <input\r\n            type=\"text\"\r\n            value={folderName}\r\n            placeholder=\"Please enter Playground title\"\r\n            onChange={(e) => setFolderName(e.target.value)}\r\n            className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n          />\r\n        </div>\r\n        <div className='flex w-full'>\r\n          <label>Enter Playground Name</label>\r\n          <input\r\n            type=\"text\"\r\n            value={playgroundName}\r\n            placeholder=\"Please enter Playground title\"\r\n            onChange={(e) => setPlaygroundName(e.target.value)}\r\n            className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full '\r\n          />\r\n        </div>\r\n\r\n        <Select\r\n          options={languageOptions}\r\n          value={language}\r\n          onChange={handleLanguageChange}\r\n\r\n        />\r\n        <button\r\n          className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n          onClick={() => {\r\n            addPlaygroundAndFolder(folderName, playgroundName, language.value);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Create PlayGround\r\n        </button>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPlayGroundAndFolder","import React from 'react'\r\nimport {RxCross1} from 'react-icons/rx'\r\nimport { ModalContext } from '../../Context/ModalContext'\r\nimport { PlayGroundContext } from '../../Context/PlayGroundContext'\r\n\r\nfunction EditFolder() {\r\n    const {closeModal,isOpenModal} = React.useContext(ModalContext)\r\n    const {folders,editFolderTitle} = React.useContext(PlayGroundContext)\r\n\r\n    const [folderTitle,setFolderTitle] = React.useState('')\r\n    const folderId = isOpenModal.identifiers.folderId\r\n  return (\r\n    <div>\r\n        <div className='flex flex-row justify-end p-4 '>\r\n            <RxCross1 className='cursor-pointer' onClick={()=>closeModal(false)}/>\r\n        </div>\r\n        <div className='px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n            <h2>Edit Folder</h2>\r\n            <input type='text' \r\n            className='border-2 border-gray-300 rounded-md p-2 w-full text-sm' \r\n            placeholder='Folder Title' value={folderTitle} \r\n            onChange={(e)=>setFolderTitle(e.target.value)}/>\r\n\r\n        </div>\r\n        <button className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={()=>{\r\n            editFolderTitle(folderId,folderTitle)\r\n            closeModal(false)\r\n        }}>\r\n            Proceed\r\n        </button>\r\n        \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditFolder","import React, { useState, useContext } from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { ModalContext } from '../../Context/ModalContext'\r\nimport { PlayGroundContext } from '../../Context/PlayGroundContext'\r\n\r\nfunction EditPlayGroundTitle() {\r\n  const { closeModal, isOpenModal } = useContext(ModalContext);\r\n  const { editPlaygroundTitle, folders } = useContext(PlayGroundContext)\r\n\r\n  const {folderId ,cardId} = isOpenModal.identifiers;\r\n  const [playgroundTitle, setPlaygroundTitle] = useState(folders[folderId].playgrounds[cardId]?.title)\r\n  return (\r\n    <>\r\n      <div className='flex flex-row justify-end p-4' >\r\n        <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n        <h2> Edit Folder </h2>\r\n        <input\r\n          type=\"text\"\r\n          value={playgroundTitle}\r\n          placeholder=\"Please enter folder title\"\r\n          onChange={(e) => setPlaygroundTitle(e.target.value)}\r\n          className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n        />\r\n        <button\r\n          className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n          onClick={() => {\r\n            editPlaygroundTitle(folderId, cardId ,playgroundTitle);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Proceed\r\n        </button>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditPlayGroundTitle","import React from 'react'\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div>Loading</div>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","\r\nimport React, { useContext } from \"react\";\r\nimport { ModalContext } from \"../Context/ModalContext\";\r\nimport { NewFolder, NewPlayGround, NewPlayGroundAndFolder, EditFolder, EditPlayGroundTitle, Loading } from './ModalTypes'\r\n\r\nfunction Modal() {\r\n    const { isOpenModal } = useContext(ModalContext)\r\n    const { modalType } = isOpenModal\r\n    \r\n    return (\r\n        <>\r\n          <div className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none\">\r\n            \r\n            <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-[30rem] bg-white\"\r\n            onClick={(e)=> e.stopPropagation()}>\r\n                {modalType === 1 && <NewFolder />}\r\n                {modalType === 2 && <NewPlayGround />}\r\n                {modalType === 3 && <NewPlayGroundAndFolder />}\r\n                {modalType === 4 && <EditFolder />}\r\n                {modalType === 5 && <EditPlayGroundTitle />}\r\n                {modalType === 6 && <Loading />}\r\n            </div>\r\n        </div>\r\n        <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n        </>\r\n      \r\n    )\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport { ModalContext } from '../../Context/ModalContext'\r\nfunction LeftPaneScreen() {\r\n  const { openModal } = React.useContext(ModalContext);\r\n  return (\r\n    <div className='h-screen flex justify-end bg-black '>\r\n        <div className='mx-auto flex flex-col items-center justify-center gap-3 text-center '>\r\n           <img src='./logo.png' alt=\"logo\" className='w-30 h-30'/>\r\n           <h2 className='font-semibold text-white '> Code Deck</h2>\r\n           <h3 className='font-semibold text-white '> Code. Compile. Debug.</h3>\r\n            <button onClick={() =>\r\n                  openModal({\r\n                    show: true,\r\n                    modalType: 3,\r\n                    identifiers: {\r\n                      folderId: \"\",\r\n                      cardId: \"\",\r\n                    }\r\n                  })\r\n                } className='w-full mt-4 p-4 bg-white shadow-lg rounded-full drop-shadow-2xl hover:scale-110 transition duration-150 ease-in-out '>\r\n               <span className='text-xl'> + Create New playground</span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeftPaneScreen","import React from 'react'\r\n\r\nfunction Card({children}) {\r\n  return (\r\n    <div className='hover:scale-105 last:w-full bg-white h-auto drop-shadow-2xl rounded-lg ease-in-out duration-500 p-4'>\r\n        {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport { IoTrashOutline } from 'react-icons/io5'\r\nimport { BiEditAlt } from 'react-icons/bi'\r\nimport { FcOpenedFolder } from 'react-icons/fc'\r\nimport playground from '../../Pages/Playground';\r\nimport Card from '../Card';\r\nimport { ModalContext } from '../../Context/ModalContext';\r\nimport { PlayGroundContext } from '../../Context/PlayGroundContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nfunction RighPaneScreen() {\r\n  const navigate = useNavigate();\r\n  const { openModal } = React.useContext(ModalContext)\r\n  const { folders, deleteFolder, deleteCard } = React.useContext(PlayGroundContext)\r\n  return (\r\n    <div className='h-screen p-8 overflow-y-auto relative'>\r\n      <div className='flex justify-between placeholder:mt-8 items-center'>\r\n        <h1> My <span className='font-semibold text-3xl'>PlayGround</span></h1>\r\n        <h3 onClick={() =>\r\n                  openModal({\r\n                    show: true,\r\n                    modalType: 1,\r\n                    identifiers: {\r\n                      folderId: \"\",\r\n                      cardId: \"\",\r\n                    }\r\n                  })\r\n                }><span className='font-semibold text-2xl'  >+</span> New Folder</h3>\r\n      </div>\r\n      <hr className='mb-12 mt-4 bg-black' />\r\n      {\r\n        folders && Object.entries(folders).map(([folderId, folder]) => (\r\n          <div className='flex-col flex my-8'>\r\n            <div className='flex justify-between items-center  placeholder:mt-8 '>\r\n              <div className='flex gap-4 items-center'>\r\n                <FcOpenedFolder size={'2em'} />\r\n                <h5 className='font-semibold'>{folder.title}</h5>\r\n              </div>\r\n              <div className='flex gap-4 items-center' onClick={(e) => {\r\n                e.stopPropagation(); //stop click propagation from child to parent\r\n              }}>\r\n                <BiEditAlt size={'1.4em'} onClick={() =>\r\n                  openModal({\r\n                    show: true,\r\n                    modalType: 4,\r\n                    identifiers: {\r\n                      folderId: \"folderId\",\r\n                      cardId: \"\",\r\n                    }\r\n                  })\r\n                } />\r\n                <IoTrashOutline size={'1.4em'} onClick={() => deleteFolder(folderId)} />\r\n                <h5 className='font-semibold' onClick={() =>\r\n                  openModal({\r\n                    show: true,\r\n                    modalType: 2,\r\n                    identifiers: {\r\n                      folderId: folderId,\r\n                      cardId: \"\",\r\n                    }\r\n                  })\r\n                } >+ <span>{\" \"}New playground</span></h5>\r\n              </div>\r\n            </div>\r\n            <hr className='mb-12 mt-4 bg-black' />\r\n            <div className='grid grid-cols-1 md:grid-cols-1 lg:grid-cols-2 gap-4'>\r\n              {\r\n                Object.entries(folder[\"playgrounds\"]).map(([playgroundId, playground]) => (<>\r\n\r\n                  <Card >\r\n                    <div onClick={(e)=>{\r\n                          e.stopPropagation(); //stop click propagation from child to parent\r\n                          console.log(folderId, playgroundId)\r\n                    navigate(`/playground/${folderId}/${playgroundId}`)\r\n                  }}className='flex items-center justify-between'>\r\n                      <div className='flex gap-4 items-center'>\r\n                        <img src=\"/logo-small.png\" />\r\n                        <div>\r\n                          <h5>{playground.title}</h5>\r\n                          <h5>Language: {playground.language}</h5>\r\n                        </div>\r\n\r\n                      </div>\r\n                      <div className='flex gap-4 items-center ' onClick={(e) => {\r\n                        e.stopPropagation(); //stop click propagation from child to parent\r\n                      }}>\r\n                        <BiEditAlt size={'1.4em'} onClick={() =>\r\n                          openModal({\r\n                            show: true,\r\n                            modalType: 5,\r\n                            identifiers: {\r\n                              folderId: folderId,\r\n                              cardId: playgroundId,\r\n                            }\r\n                          })\r\n                        } />\r\n                        <IoTrashOutline size={'1.4em'} onClick={() => deleteCard(folderId, playgroundId)} />\r\n                      </div>\r\n                    </div>\r\n                  </Card>\r\n                </>))\r\n              }\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n        ))\r\n\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RighPaneScreen","import React from 'react'\r\nimport LeftPaneScreen from '../Component/Home/LeftPaneScreen'\r\nimport RightPaneScreen from '../Component/Home/RightPaneScreen'\r\nimport { ModalContext } from '../Context/ModalContext'\r\nimport Modal from '../Component/Modal';\r\nfunction Home() {\r\n  const {isOpenModal} = React.useContext(ModalContext)\r\n  return (\r\n    <div className='grid md:grid-cols-1 lg:grid-cols-2'>\r\n        <div className='md:w-full sm:w-full'>\r\n            <LeftPaneScreen />\r\n        </div>\r\n        <div className='md:w-full sm:w-full'>\r\n            <RightPaneScreen />\r\n        </div>\r\n        {console.log(isOpenModal)}\r\n        {isOpenModal?.show && <Modal/>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div>NavBar</div>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\n\r\nfunction EditContainer() {\r\n  return (\r\n    <div>EditContainer</div>\r\n  )\r\n}\r\n\r\nexport default EditContainer","import React from 'react'\r\n\r\nfunction InputConsole() {\r\n  return (\r\n    <div>InputConsole</div>\r\n  )\r\n}\r\n\r\nexport default InputConsole","import React from 'react'\r\n\r\nfunction OutputConsole() {\r\n  return (\r\n    <div>OutputConsole</div>\r\n  )\r\n}\r\n\r\nexport default OutputConsole","import React from 'react'\r\nimport NavBar from '../Component/Playground/NavBar'\r\nimport EditContainer from '../Component/Playground/EditContainer'\r\nimport axios from \"axios\"\r\nimport InputConsole from '../Component/Playground/InputConsole'\r\nimport OutputConsole from '../Component/Playground/OutputConsole'\r\nimport { Buffer } from 'buffer'\r\nimport Modal from '../Component/Modal';\r\nimport { useParams } from 'react-router-dom'\r\nimport { ModalContext } from '../Context/ModalContext'\r\nimport { PlayGroundContext, languageMap } from '../Context/PlayGroundContext'\r\nimport { useNavigate } from 'react-router-dom';\r\nfunction Playground() {\r\n  const navigate = useNavigate();\r\n  const { folderId, playgroundId } = useParams();\r\n  const { openModal, isOpenModal, closeModal } = React.useContext(ModalContext);\r\n  const { folders, savePlayground } = React.useContext(PlayGroundContext);\r\n  const { title, language, code } = folders[folderId].playgrounds[playgroundId];\r\n\r\n  const [currentLanguage, setCurrentLanguage] = React.useState(language);\r\n  const [currentCode, setCurrentCode] = React.useState(code);\r\n  const [currentOutput, setCurrentOutput] = React.useState(\"\");\r\n  const [currentInput, setCurrentInput] = React.useState(\"\");\r\n  const [isFullScreen, setIsFullScreen] = React.useState(false);\r\n\r\n  const saveCode = () => {\r\n    savePlayground(folderId, playgroundId, currentCode, currentLanguage);\r\n  }\r\n\r\n\r\n  const enCode = (data) => {\r\n    return Buffer.from(data, \"binary\").toString(\"base64\")\r\n  }\r\n  const deCode = (data) => {\r\n    return Buffer.from(data, \"base64\").toString()\r\n  }\r\n\r\n  const postSubmission = async (language_id, source_code, stdin) => {\r\n    const options = {\r\n      method: 'POST',\r\n      url: 'https://judge0-ce.p.rapidapi.com/submissions',\r\n      params: { base64_encoded: 'true', fields: '*' },\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'X-RapidAPI-Key': '298dc37bc4msh976681f74d3a7f2p1d7994jsn916f1cce26fe',\r\n        'X-RapidAPI-Host': 'judge0-ce.p.rapidapi.com'\r\n      },\r\n      data: JSON.stringify({ language_id: language_id, source_code: source_code, stdin: stdin })\r\n    };\r\n    const response = await axios.request(options);\r\n    return response?.data?.token;\r\n  }\r\n\r\n  const getOutput = async (token) => {\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      url: 'https://judge0-ce.p.rapidapi.com/submissions/' + token,\r\n      params: { base64_encoded: 'true', fields: '*' },\r\n      headers: {\r\n        'X-RapidAPI-Key': '298dc37bc4msh976681f74d3a7f2p1d7994jsn916f1cce26fe',\r\n        'X-RapidAPI-Host': 'judge0-ce.p.rapidapi.com'\r\n      }\r\n    };\r\n\r\n    // call the api to get status of our token \r\n\r\n    const response = await axios.request(options);\r\n    if (response.data.status_id <= 2) {\r\n      const response2 = await axios.request(options);\r\n      return response2.data;\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  const runCode = async () => {\r\n\r\n    openModal({\r\n      show: true,\r\n      modalType: 6,\r\n      identifiers: {\r\n        folderId: \"\",\r\n        playgroundId: \"\",\r\n      }\r\n    })\r\n\r\n    const language_id = languageMap[currentLanguage];\r\n    const source_code = enCode(currentCode);\r\n    const stdin = enCode(currentInput);\r\n\r\n    // post the code to the api and get the token\r\n    const token = await postSubmission(language_id, source_code, stdin);\r\n\r\n    // get the output from the api using the token\r\n    const res = await getOutput(token);\r\n\r\n    const status_name = res.status.description;\r\n    const decoded_output = deCode(res.stdout ? res.stdout : \"\");\r\n    const decoded_compile_output = deCode(res.compile_output ? res.compile_output : \"\");\r\n    const decoded_error = deCode(res.stderr ? res.stderr : \"\");\r\n\r\n    let final_ouput = \"\";\r\n    if (res.status_id !== 3) {\r\n      if (decoded_compile_output === \"\") {\r\n        final_ouput = decoded_error;\r\n      }\r\n      else {\r\n        final_ouput = decoded_compile_output;\r\n      }\r\n    }\r\n\r\n    else {\r\n      final_ouput = decoded_output;\r\n    }\r\n    setCurrentCode(status_name + \"\\n\" + final_ouput);\r\n    closeModal();\r\n  }\r\n  const getFile = (e, setState) => {\r\n    const input = e.target;\r\n    if (\"files\" in input && input.files.length > 0) {\r\n      placeFileContent(\r\n        input.files[0], setState\r\n      );\r\n    }\r\n  }\r\n  const placeFileContent = (file, setState) => {\r\n    readFileContent(file).then(content => {\r\n      setState(content);\r\n    }).catch(error => console.log(error));\r\n  }\r\n  const readFileContent = (file) => {\r\n    const reader = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n      reader.onload = (event) => {\r\n        resolve(event.target.result);\r\n      };\r\n      reader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n      reader.readAsText(file);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <NavBar isFullScreen={isFullScreen} />\r\n      <div className=\"flex flex-col lg:flex-row h-full \">\r\n        <div className={`${isFullScreen ? \"w-full\" : \"w-full lg:w-3/4\"}`}>\r\n          <EditContainer\r\n            title={title}\r\n            currentLanguage={currentLanguage}\r\n            setCurrentLanguage={setCurrentLanguage}\r\n            currentCode={currentCode}\r\n            setCurrentCode={setCurrentCode}\r\n            folderId={folderId}\r\n            playgroundId={playgroundId}\r\n            saveCode={saveCode}\r\n            runCode={runCode}\r\n            getFile={getFile}\r\n            isFullScreen={isFullScreen}\r\n            setIsFullScreen={setIsFullScreen}\r\n          />\r\n\r\n        </div>\r\n        {\r\n          !isFullScreen &&\r\n          <div className=\"w-full lg:w-1/4\">\r\n            <InputConsole\r\n              currentInput={currentInput}\r\n              setCurrentInput={setCurrentInput}\r\n              getFile={getFile} />\r\n            <OutputConsole\r\n              currentOutput={currentOutput}\r\n            />\r\n          </div>\r\n        }\r\n      </div>\r\n      {isOpenModal.show && <Modal />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Playground"],"names":["closeModal","useContext","ModalContext","addFolder","PlayGroundContext","useState","folderTitle","setFolderTitle","console","log","className","onClick","type","value","placeholder","onChange","e","target","isOpenModal","addPlayground","languageOptions","label","folderId","identifiers","cardTitle","setCardTitle","language","setLanguage","options","selectedOption","addPlaygroundAndFolder","playgroundName","setPlaygroundName","folderName","setFolderName","React","editFolderTitle","folders","editPlaygroundTitle","cardId","playgrounds","title","playgroundTitle","setPlaygroundTitle","modalType","stopPropagation","openModal","src","alt","show","children","navigate","useNavigate","deleteFolder","deleteCard","Object","entries","map","folder","size","playgroundId","playground","RightPaneScreen","Modal","useParams","savePlayground","code","currentLanguage","setCurrentLanguage","currentCode","setCurrentCode","currentOutput","currentInput","setCurrentInput","isFullScreen","setIsFullScreen","enCode","data","Buffer","toString","deCode","postSubmission","language_id","source_code","stdin","method","url","params","base64_encoded","fields","headers","JSON","stringify","axios","response","token","getOutput","status_id","response2","runCode","languageMap","res","status_name","status","description","decoded_output","stdout","decoded_compile_output","compile_output","decoded_error","stderr","final_ouput","getFile","setState","input","files","length","placeFileContent","file","readFileContent","then","content","catch","error","reader","FileReader","Promise","resolve","reject","onload","event","result","onerror","readAsText","saveCode"],"sourceRoot":""}